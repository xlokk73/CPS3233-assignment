@incollection{runtimeVerification,
  TITLE = {{A Tutorial on Runtime Verification}},
  AUTHOR = {Falcone, Yli{\`e}s and Havelund, Klaus and Reger, Giles},
  URL = {https://hal.inria.fr/hal-00853727},
  NOTE = {Summer School Marktoberdorf 2012},
  BOOKTITLE = {{Engineering Dependable Software Systems}},
  EDITOR = {Manfred Broy and Doron Peled and Georg Kalus},
  PUBLISHER = {{IOS Press}},
  SERIES = {NATO Science for Peace and Security Series - D: Information and Communication Security},
  VOLUME = {34},
  PAGES = {141-175},
  YEAR = {2013},
  DOI = {10.3233/978-1-61499-207-3-141},
  HAL_ID = {hal-00853727},
  HAL_VERSION = {v1},
}

@inbook{criticalSystems,
author = {Pietrantuono, Roberto and Russo, Stefano},
year = {2013},
month = {01},
pages = {15-25},
title = {Introduction to Safety Critical Systems},
isbn = {9788847027725},
doi = {10.1007/978-88-470-2772-5_2}
}

@software{autopsy,
  author = {{Brian Carrier}},
  title = {Autopsy},
  url = {https://www.autopsy.com},
  version = {2.24},
  date = {2020-11-11},
}

@software{androidStudio,
author  = {{Google}},
title   = {Android Studio},
url     = {https://developer.android.com/studio},
version = {4.1.1},
date    = {2020-11-11},
}

@software{qemu,
author  = {{Fabrice Bellard and the QEMU Project developers}},
title   = {QEMU},
url     = {https://www.qemu.org},
version = {5.0.0},
date    = {2020-11-11},
}

@book{modelchecking,
  title={Systems and Software Verification: Model-Checking Techniques and Tools},
  author={Berard, B. and McKenzie, P. and Bidoit, M. and Finkel, A. and Laroussinie, F. and Petit, A. and Petrucci, L. and Schnoebelen, P.},
  isbn={9783662045589},
  url={https://books.google.com.mt/books?id=xJGqCAAAQBAJ},
  year={2013},
  publisher={Springer Berlin Heidelberg}
}

@online{androidx86,
  author = {androidx86 team},
  title = {{Android-x86} Run Android on your PC},
  year = 2020,
  url = {https://www.android-x86.org},
  urldate = {2020-11-11}
}


@online{larva,
  author = {Christian Colombo and Gordon J Pace},
  title = {{LARVA} Logical Automata for Runtime Verification and Analysis},
  year = 2020,
  url = {http://www.cs.um.edu.mt/svrg/Tools/LARVA/},
  urldate = {2020-11-11}
}

@online{log2timeline,
  author = {plaso},
  title = {{log2timeline}},
  year = 2020,
  url = {https://github.com/log2timeline/plaso},
  urldate = {2020-11-11}
}

@article{lowhighlevelevents,
title = "An automated timeline reconstruction approach for digital forensic investigations",
journal = "Digital Investigation",
volume = "9",
pages = "S69 - S79",
year = "2012",
note = "The Proceedings of the Twelfth Annual DFRWS Conference",
issn = "1742-2876",
doi = "https://doi.org/10.1016/j.diin.2012.05.006",
url = "http://www.sciencedirect.com/science/article/pii/S174228761200031X",
author = "Christopher Hargreaves and Jonathan Patterson",
keywords = "Digital forensics, Automation, Timelines, Event reconstruction, Forensic computing, Timestamp, Visualisation",
abstract = "Existing work on digital forensics timeline generation focuses on extracting times from a disk image into a timeline. Such an approach can produce several million ‘low-level’ events (e.g. a file modification or a Registry key update) for a single disk. This paper proposes a technique that can automatically reconstruct high-level events (e.g. connection of a USB stick) from this set of low-level events. The paper describes a framework that extracts low-level events to a SQLite backing store which is automatically analysed for patterns. The provenance of any high-level events is also preserved, meaning that from a high-level event it is possible to determine the low-level events that caused its inference, and from those, the raw data that caused the low-level event to be initially created can also be viewed. The paper also shows how such high-level events can be visualised using existing tools."
}


